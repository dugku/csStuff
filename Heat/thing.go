package main

import (
	"fmt"
	dem "github.com/markus-wa/demoinfocs-golang/v4/pkg/demoinfocs"
	"github.com/markus-wa/demoinfocs-golang/v4/pkg/demoinfocs/events"
	"log"
	"math"
	"os"
	"strings"
)

type vector struct {
	x, y, z float64
}

type Position struct {
	Name   string
	Points []vector
}

type singleVect struct {
	x, y, z float64
}

func main() {

	positions := []Position{
		{
			Name: "before pit",
			Points: []vector{
				{1250.205200, 1028.603149, 63.868896},
				{1246.671631, 809.016846, 64.008347},
				{1587.357422, 802.143066, 54.768353},
				{1581.968506, 1023.952820, 64.186935},
			},
		},
		{
			Name: "long corner",
			Points: []vector{
				{1268.032837, 1240.063232, 63.871250},
				{1577.968628, 1240.366577, 64.414597},
				{1581.946411, 1041.277466, 64.303261},
				{1250.119507, 1029.442993, 63.868500},
			},
		},
		{
			Name: "long",
			Points: []vector{
				{1268.027710, 1241.576538, 63.871250},
				{1577.968750, 1241.543213, 64.416443},
				{1593.968750, 1428.031616, 64.651169},
				{1593.968750, 1679.570801, 63.558159},
				{1607.385254, 2286.328125, 64.203362},
				{1293.302124, 2283.972900, 75.506744},
				{1270.029419, 2006.712402, 64.634491},
				{1252.031250, 1771.968628, 65.952271},
				{1238.028809, 1739.823486, 63.999874},
				{1238.027344, 1710.091064, 63.962753},
				{1252.031372, 1552.046387, 64.589767},
				{1268.031616, 1535.007446, 65.058388},
			},
		},
		{
			Name: "A car",
			Points: []vector{
				{1598.145508, 1688.361206, 63.506203},
				{1668.394531, 1812.030396, 63.694584},
				{1787.968750, 1812.029297, 65.534187},
				{1787.570923, 2029.898682, 67.389778},
				{1769.994873, 2263.968750, 67.244148},
				{1630.217651, 2265.693848, 64.521637},
			},
		},
		{
			Name: "A Ramp",
			Points: []vector{
				{1300.030396, 2292.478027, 76.169006},
				{1606.848633, 2288.476562, 64.632065},
				{1604.595459, 2747.971680, 173.092453},
				{1561.981812, 2751.127197, 175.101654},
				{1561.574707, 2817.377441, 184.768280},
				{1289.565186, 2807.946777, 189.863556},
			},
		},
		{
			Name: "A barrels",
			Points: []vector{
				{1561.542725, 2818.946045, 184.986389},
				{1267.048096, 2823.769775, 190.871246},
				{1263.983887, 3059.968750, 192.398972},
				{1561.968994, 3059.970459, 190.737411},
			},
		},
		{
			Name: "goose",
			Points: []vector{
				{1266.160889, 2823.429932, 190.871246},
				{1267.005859, 3059.630859, 192.426086},
				{1051.031250, 3059.968750, 193.891602},
				{1046.952637, 2637.163086, 159.803345},
				{1235.968750, 2636.806396, 160.360916},
				{1231.241943, 2814.005615, 190.871246},
			},
		},
		{
			Name: "A site",
			Points: []vector{
				{1235.972900, 2635.227783, 160.363800},
				{977.000366, 2630.523926, 160.187744},
				{977.987976, 2410.303711, 190.871246},
				{1040.609375, 2411.972656, 190.871246},
				{1042.058105, 2319.610352, 190.871246},
				{1269.666016, 2320.117676, 190.871246},
			},
		},
		{
			Name: "A Ct",
			Points: []vector{
				{1245.026245, 2038.026123, 65.312065},
				{1260.887451, 2283.972656, 76.070648},
				{537.237671, 2275.972168, -50.195251},
				{537.083130, 2072.027832, -49.369469},
				{910.089966, 2068.027832, 35.714752},
				{914.070007, 2042.022705, 38.580578},
			},
		},
		{
			Name: "elevator",
			Points: []vector{
				{1004.968567, 2379.932129, 85.676323},
				{1004.971130, 2305.840820, 81.027031},
				{850.244995, 2294.750732, 38.081223},
				{854.831299, 2379.968750, 41.161125},
			},
		},
		{
			Name: "boost",
			Points: []vector{
				{853.292969, 2379.785156, 40.891392},
				{854.622925, 2317.535156, 40.625751},
				{564.028076, 2298.136230, 36.058132},
				{564.031372, 2379.968750, 130.871246},
			},
		},
		{
			Name: "ninja",
			Points: []vector{
				{305.856537, 2678.831299, 160.755554},
				{302.341644, 2745.378418, 202.121246},
				{278.031677, 2745.462646, 202.121246},
				{278.031586, 2763.968750, 202.121246},
				{972.266663, 2763.595703, 162.143723},
				{972.926514, 2696.815430, 159},
			},
		},
		{
			Name: "A plat",
			Points: []vector{
				{978.581299, 2407.174072, 190.871246},
				{980.702209, 2692.364014, 159.612320},
				{305.830688, 2676.605957, 160.753036},
				{302.199646, 2522.161377, 161.106445},
				{278.031250, 2522.167969, 161.673355},
				{280.773804, 2434.312988, 161.597946},
			},
		},
		{
			Name: "t spawn",
			Points: []vector{
				{439.718689, -660.031250, 2.560889},
				{-2203.843506, -661.726013, 128.031250},
				{-2203.843750, -1031.968750, 128.234650},
				{-1787.968750, -1059.968750, 128.908234},
				{-299.907471, -1062.317139, 79.124397},
				{-299.968689, -1163.968750, 77.683266},
				{175.549255, -1163.968506, 41.031250},
				{175.215820, -999.971924, 6.044193},
				{439.718750, -999.968689, 6.044193},
			},
		},
		{
			Name: "beside suicide",
			Points: []vector{
				{363.966034, -644.193726, 49.682579},
				{-360.896729, -644.193726, 209.84350},
				{-361.306152, -428.352936, 72.871254},
				{-301.814026, -470.031372, 72.871254},
				{-84.031281, -470.029724, 72.871246},
				{-79.669800, -500.028809, 64.678314},
				{363.198792, -485.017090, 63.796303},
			},
		},
		{
			Name: "outside long",
			Points: []vector{
				{363.198944, -480.017334, 63.739334},
				{70.648300, -480.231506, 65.932632},
				{116.031693, -414.903839, 65.805458},
				{116.027390, -276.031067, 65.350204},
				{148.028870, -260.359558, 72.260780},
				{129.790115, 258.251862, 65.698196},
				{747.968933, 235.968811, 72.871246},
				{758.813049, -395.968872, 131.871246},
				{683.968811, -407.968567, 71.863297},
				{596.031250, -407.968628, 71.862495},
				{572.031372, -395.968903, 71.849487},
				{564.242859, -363.968414, 71.009453},
				{361.146332, -365.513824, 66.077339},
			},
		},
		{
			Name: "long doors",
			Points: []vector{
				{697.672607, 254.767014, 63.610771},
				{656.681274, 236.968460, 63.075157},
				{584.031494, 263.975983, 63.956169},
				{539.031433, 342.409576, 65.316719},
				{539.031616, 696.284119, 65.142883},
				{627.803833, 808.030151, 64.180824},
				{579.573120, 788.470276, 64.835739},
				{516.031494, 808.031555, 65.622589},
				{516.043762, 828.334167, 65.807953},
				{799.253479, 831.707336, 63.871185},
				{697.968445, 768.017395, 64.249031},
				{634.458069, 686.295044, 64.636261},
				{740.968628, 695.374390, 139.871246},
				{740.968567, 341.715576, 64.274200},
				{695.968323, 317.115173, 64.520599},
			},
		},
		{
			Name: "right outside long doors",
			Points: []vector{
				{516.028503, 843.141724, 65.855614},
				{1248.182373, 831.894592, 63.808716},
				{1249.062622, 1084.108765, 63.085182},
				{534.031616, 1065.703857, 65.428650},
				{516.028198, 1019.969360, 64.968933},
			},
		},
		{
			Name: "weird barrels spot",
			Points: []vector{
				{812.598938, 820.689148, 111.031250},
				{1248.459717, 822.011963, 63.871834},
				{1227.604248, 768.145081, 72.871246},
				{940.484680, 763.554932, 72.862495},
				{860.031494, 790.031372, 64.310844},
			},
		},
		{
			Name: "blue",
			Points: []vector{
				{1249.063110, 1085.161743, 63.062355},
				{1248.509277, 1195.968994, 63.788620},
				{534.032043, 1157.222046, 66.370781},
				{534.090393, 1087.834595, 65.444313},
			},
		},
		{
			Name: "side long",
			Points: []vector{
				{1227.968628, 767.334412, 72.871246},
				{944.332458, 760.631104, 72.449211},
				{982.028809, 706.556885, 71.098343},
				{968.031311, 585.968750, 73.168945},
				{968.031494, 215.031494, 75.596527},
				{1227.968750, 215.031296, 74.352737},
			},
		},
		{
			Name: "pit",
			Points: []vector{
				{1571.971802, 778.265442, 53.955860},
				{1292.031738, 772.169250, 55.282764},
				{1292.031494, 201.031494, -118.044296},
				{1571.968750, 201.031357, -116.855225},
				{1571.972412, 773.853088, 53.870598},
			},
		},
		{
			Name: "plat pit",
			Points: []vector{
				{1587.481934, 1017.635864, 64.231117},
				{1768.968384, 1007.791321, 127.509262},
				{1768.968628, 310.031250, 121.349365},
				{1636.031250, 310.031342, 121.430191},
				{1598.833496, 340.028351, 143.871246},
			},
		},
		{
			Name: "A short",
			Points: []vector{
				{281.043091, 2432.046631, 161.584137},
				{534.059265, 2430.232666, 190.713425},
				{529.778625, 2068.031250, 190.871246},
				{494.181274, 2052.031250, 159.871246},
				{489.968628, 1365.031250, 138.371246},
				{280.225861, 1367.965088, 64.054558},
				{267.968750, 1348.031372, 64.076363},
				{72.772789, 1366.707153, 63.723419},
				{68.705704, 1515.968750, 64.094063},
				{269.252045, 1515.972168, 65.255615},
				{275.265961, 1890.138428, 161.635986},
				{305.976807, 1899.090088, 161.005402},
				{309.257050, 2103.654541, 160.768875},
				{278.031342, 2113.825928, 161.547028},
			},
		},
		{
			Name: "catwalk",
			Points: []vector{
				{47.970398, 1581.803101, 65.013931},
				{60.654594, 1348.031250, 63.836487},
				{-86.302551, 1343.805542, 63.996056},
				{-149.754730, 1280.166382, 63.878174},
				{-161.667068, 736.110901, 65.319862},
				{-245.651917, 733.680359, 64.250984},
				{-244.325745, 1516.968872, 95.871246},
				{-112.866211, 1516.997681, 64.209213},
				{-112.970581, 1581.968750, 65.325089},
			},
		},
		{
			Name: "top mid",
			Points: []vector{
				{-149.031311, 729.745911, 65.380844},
				{-523.968628, 701.968750, 72.871246},
				{-526.011108, 627.978760, 72.871246},
				{-621.968506, 627.800964, 71.935333},
				{-633.968689, 615.646484, 71.990692},
				{-633.968994, 556.031250, 72.230194},
				{-624.836609, 493.968842, 72.185997},
				{-725.007690, 493.968628, 84.963226},
				{-663.968811, 212.028488, 120.871246},
				{-405.095215, 218.189072, 63.316555},
				{-328.489807, 308.031616, 61.978008},
				{-67.307129, 308.028748, 64.163200},
				{-67.845634, 457.970703, 62.846344},
				{-149.027832, 531.192078, 63.578239},
			},
		},
		{
			Name: "mid",
			Points: []vector{
				{-268.163818, 733.307617, 64.166435},
				{-493.968781, 726.516174, 64.105850},
				{-493.971466, 895.404053, 34.478100},
				{-521.968750, 898.031250, 36.848095},
				{-521.968689, 1101.968750, -8.918129},
				{-495.032104, 1101.966187, -12.531509},
				{-488.363770, 1533.853027, -61.093262},
				{-267.187622, 1516.904053, 96.031250},
			},
		},
		{
			Name: "mid doors",
			Points: []vector{
				{-342.032928, 1531.691650, -62.423401},
				{-489.968658, 1524.453369, -61.186134},
				{-489.968964, 1647.019531, -62.143822},
				{-500.189545, 1670.030640, -59.017059},
				{-569.969055, 1670.032349, -52.830208},
				{-605.968628, 1911.968750, -53.913681},
				{-340.031494, 1892.162598, -60.872398},
				{-344.775330, 1779.604370, -59.645477},
				{-276.031250, 1772.968750, -42.131279},
				{-276.031250, 1744.031494, -40.736633},
				{-342.028198, 1737.789673, -60.409859},
				{-342.031250, 1663.630859, -64.245422},
			},
		},
		{
			Name: "ct mid",
			Points: []vector{
				{-340.029053, 1895.309448, -60.962486},
				{-605.968933, 1897.701660, -54.479439},
				{-605.969971, 1911.968994, -53.913658},
				{-569.971069, 1918.885986, -55.101395},
				{-572.495789, 2102.040039, -55.697937},
				{-698.175659, 2102.031250, -52.861794},
				{-700.626343, 2550.714355, -17.844421},
				{-618.031189, 2549.999268, -18.721634},
				{-613.223694, 2446.142578, -27.241005},
				{-337.031250, 2423.968750, -27.563171},
				{-342.818604, 1895.526489, -61.061935},
			},
		},
		{
			Name: "Ct",
			Points: []vector{
				{-319.822327, 2002.176514, -63.249306},
				{-319.527863, 2283.895752, -55.312767},
				{-48.784851, 2278.968750, -63.732460},
				{85.647522, 2377.431396, -54.769272},
				{88.031258, 2531.968750, -54.768822},
				{487.968750, 2531.970703, -43.128769},
				{487.968750, 2291.972900, -57.943199},
				{545.269043, 2275.551270, -47.535515},
				{544.400696, 2072.031738, -47.540054},
				{64.876778, 2052.225830, -60.160751},
				{-8.705444, 2012.867920, -59.538902},
			},
		},
		{
			Name: "ct second mid",
			Points: []vector{
				{-712.028381, 2102.213623, -52.166405},
				{-711.159668, 2550.807861, -17.544037},
				{-1046.884888, 2553.765625, 77.196457},
				{-1033.353149, 2102.224121, 50.410995},
				{-873.726501, 2102.028076, -22.767769},
				{-871.968750, 2066.031250, -20.612823},
				{-760.058167, 2066.030762, -47.780617},
				{-748.625122, 2102.031250, -50.034081},
			},
		},
		{
			Name: "door boxes",
			Points: []vector{
				{-1037.968628, 2102.031738, 52.396862},
				{-1047.922852, 2296.773193, 36.945396},
				{-1240.680176, 2271.982178, 68.288177},
				{-1232.669678, 2098.031250, 74.655945},
				{-1211.952881, 2070.032227, 75.633575},
				{-1062.031372, 2070.031982, 129.871246},
				{-1051.325317, 2102.031250, 130.031250},
			},
		},
		{
			Name: "Scaff",
			Points: []vector{
				{-1176.611816, 2546.746826, 110.101334},
				{-1172.948120, 2689.278076, 144.364212},
				{-1070.031738, 2693.736328, 202.928238},
				{-1070.704590, 2554.103271, 85.001389},
			},
		},
		{
			Name: "Window",
			Points: []vector{
				{-1273.647339, 2545.143066, 118.747192},
				{-1182.062866, 2546.666016, 111.140251},
				{-1176.482788, 2689.102051, 143.977936},
				{-1359.973389, 2691.051270, 190.482758},
				{-1356.492798, 2669.027832, 192.482407},
				{-1273.967773, 2650.822266, 193.631714},
			},
		},
		{
			Name: "Where outside B",
			Points: []vector{
				{-1273.968628, 2317.713379, 71.727379},
				{-1053.122070, 2323.791260, 40.921734},
				{-1054.390747, 2548.714355, 78.904297},
				{-1273.968994, 2540.759766, 117.118744},
			},
		},
		{
			Name: "B doors",
			Points: []vector{
				{-1240.951172, 2308.781738, 71.213425},
				{-1236.976807, 2098.031250, 74.857773},
				{-1376.209351, 2098.090332, 66.425117},
				{-1390.561768, 2299.045166, 63.879318},
			},
		},
		{
			Name: "b site",
			Points: []vector{
				{-1712.128174, 2855.971680, 130.031250},
				{-1719.158813, 2491.622314, 129.871246},
				{-1366.031372, 2491.644775, 68.260277},
				{-1364.033691, 2765.147705, 80.017807},
				{-1521.726196, 2855.970703, 70.263672},
				{-1677.757935, 2855.972168, 83.594810},
			},
		},
		{
			Name: "b plat",
			Points: []vector{
				{-1730.033325, 2855.292480, 129.871246},
				{-1737.722168, 2443.933838, 129.871246},
				{-2101.968750, 2447.588379, 129.871246},
				{-2093.968750, 2696.010986, 98.124649},
				{-2093.968018, 3117.970215, 98.956940},
				{-1984.031250, 3117.968750, 96.951309},
				{-1975.593018, 3042.968750, 136.121246},
				{-1906.031250, 3042.968750, 170.871246},
				{-1902.952393, 2863.342529, 94.314682},
			},
		},
		{
			Name: "box",
			Points: []vector{
				{-1718.371216, 2425.908203, 130.031250},
				{-2101.970215, 2413.221680, 130.031250},
				{-2155.968994, 2407.684570, 87.793205},
				{-2155.937012, 2354.031250, 75.868179},
				{-2125.914307, 2338.599854, 68.804558},
				{-1720.939209, 2323.440674, 64.519791},
			},
		},
		{
			Name: "idk where this is",
			Points: []vector{
				{-1716.715454, 2323.605469, 64.288361},
				{-1366.031372, 2301.177734, 64.186600},
				{-1369.110107, 2430.976562, 67.300270},
				{-1698.968994, 2425.727051, 72.213531},
			},
		},
		{
			Name: "no mans land",
			Points: []vector{
				{-1366.071411, 2297.972900, 64.170502},
				{-2125.969727, 2313.285645, 67.021378},
				{-2132.793701, 2285.971680, 65.624847},
				{-2182.969238, 2285.969238, 66.295761},
				{-2182.968750, 2098.031250, 67.630653},
				{-2125.972168, 2093.443115, 65.894905},
				{-2125.915039, 2062.996338, 66.424522},
				{-1788.130493, 2051.521973, 59.162270},
				{-1788.765869, 2008.269775, 60.550266},
				{-1394.031250, 2005.592041, 68.371346},
			},
		},
		{
			Name: "close",
			Points: []vector{
				{-2063.819092, 2045.789917, 64.563011},
				{-2157.969727, 2029.968872, 67.681305},
				{-2157.969971, 1814.031616, 67.235573},
				{-2080.865723, 1814.028809, 77.164169},
			},
		},
		{
			Name: "B car",
			Points: []vector{
				{-1394.724243, 1996.947876, 68.53112},
				{-1394.031250, 1912.011353, 70.089439},
				{-1564.177979, 1743.755127, 64.318649},
				{-1626.020142, 1620.031250, 66.068176},
				{-1707.969116, 1620.031738, 66.396477},
				{-1711.719727, 1814.031982, 65.537621},
				{-1764.968872, 1814.031982, 65.853439},
				{-1762.432251, 2002.937134, 60.456608},
			},
		},
		{
			Name: "right outside B",
			Points: []vector{
				{-1785.710327, 2002.844116, 60.763580},
				{-1770.971558, 1814.031372, 143.031250},
				{-2076.775391, 1814.213989, 80.004128},
				{-2061.565186, 2024.093750, 64.447319},
			},
		},
		{
			Name: "right outside B",
			Points: []vector{
				{-1785.710327, 2002.844116, 60.763580},
				{-1770.971558, 1814.031372, 143.031250},
				{-2076.775391, 1814.213989, 80.004128},
				{-2061.565186, 2024.093750, 64.447319},
			},
		},
		{
			Name: "out b",
			Points: []vector{
				{-2025.972656, 1793.698975, 96.871246},
				{-1942.031250, 1793.755859, 96.871246},
				{-1942.781372, 1405.723755, 94.464149},
				{-2025.969116, 1403.819092, 94.993660},
			},
		},
		{
			Name: "upper",
			Points: []vector{
				{-2025.972412, 1397.498413, 94.937943},
				{-1682.031250, 1386.968750, 105.629532},
				{-1677.931763, 1261.971436, 97.300339},
				{-1575.031250, 1261.968750, 102.099907},
				{-1553.500854, 1244.968750, 99.963242},
				{-1522.576172, 1244.968506, 101.299942},
				{-1504.968750, 1261.968750, 102.042847},
				{-1388.028442, 1261.970337, 99.321701},
				{-1390.948364, 1042.031128, 103.684326},
				{-1504.968750, 1043.618286, 100.455750},
				{-1516.267090, 1059.027832, 99.912483},
				{-1575.031982, 1048.684326, 97.888634},
				{-1554.031738, 982.027893, 98.851189},
				{-1837.969238, 982.027466, 103.707664},
				{-1849.561768, 1042.029053, 99.628815},
				{-1936.969238, 1042.031372, 97.582199},
				{-1946.311768, 1059.032104, 97.623512},
				{-1986.008911, 1059.028687, 98.174271},
				{-2007.031860, 1042.031738, 99.547768},
				{-2168.968750, 1042.029419, 103.578369},
				{-2185.969238, 1059.031494, 103.050568},
				{-2183.804199, 1244.968872, 102.785263},
				{-2168.969238, 1263.926880, 103.662491},
				{-2031.675537, 1269.985474, 95.622528},
			},
		},
		{
			Name: "stairs",
			Points: []vector{
				{-1369.770142, 1261.949585, 134.621246},
				{-1366.304688, 1042.031250, 103.660248},
				{-1271.820923, 1042.501587, 95.871246},
				{-1195.103760, 1047.905762, 65.266426},
				{-1097.790894, 1100.473999, 23.757416},
				{-1053.740234, 1172.320557, -7.481339},
				{-1046.751099, 1247.919312, -37.215080},
				{-1048.313477, 1311.279907, -47.874649},
				{-1155.429810, 1261.968506, 95.87124},
				{-1265.968750, 1261.968994, 167.900024},
			},
		},
		{
			Name: "lower",
			Points: []vector{
				{-1048.028931, 1314.109863, -47.875526},
				{-1175.968750, 1334.031250, -46.737984},
				{-1199.962891, 1343.031372, -43.455338},
				{-1199.968750, 1507.968750, -12.128754},
				{-1175.968628, 1519.968750, -12.128754},
				{-556.031250, 1517.968750, -47.267479},
				{-546.337585, 1465.968506, -48.894051},
				{-500.812836, 1465.970703, -47.128754},
				{-503.279297, 1382.031250, -47.128754},
				{-556.028625, 1379.336182, -49.942726},
				{-556.031616, 1334.031250, -46.786278},
			},
		},
		{
			Name: "outside upper tuns",
			Points: []vector{
				{-1624.108643, 957.715027, 95.155411},
				{-1705.968750, 957.819031, 96.021729},
				{-1705.925537, 706.680908, 94.445175},
				{-1624.031250, 705.912598, 95.705978},
			},
		},
		{
			Name: "outside upper",
			Points: []vector{
				{-1902.968750, 679.968750, 98.928558},
				{-1425.049805, 679.968628, 100.140091},
				{-1422.033813, 590.968262, 96.040100},
				{-1332.031250, 590.385071, 99.686432},
				{-1332.028687, 509.782104, 127.871246},
				{-1274.523926, 158.473206, 71.871246},
				{-1272.030396, 52.031261, 101.158981},
				{-1359.350220, 52.029278, 132.871246},
				{-1428.281372, -31.024275, 132.871246},
				{-1428.281738, -107.968613, 179.837708},
				{-2027.968750, -111.868591, 71.838028},
				{-2043.968994, 164.031693, 72.458054},
				{-2043.968872, 589.968567, 99.852020},
				{-1902.949707, 594.990723, 96.073120},
			},
		},
		{
			Name: "t ramp",
			Points: []vector{
				{-1812.030396, -119.444412, 71.871246},
				{-2057.969971, -136.031311, 74.867523},
				{-2067.652832, -531.058655, 173.624359},
				{2183.433594, -637.285889, 191.871246},
				{-1812.031372, -638.123474, 192.123108},
			},
		},
		{
			Name: "t plat",
			Points: []vector{
				{-1795.032959, -640.404785, 223.871246},
				{-1795.576294, -140.031311, 223.871246},
				{-1428.281494, -127.505363, 223.871246},
				{-1425.899048, -210.533691, 192.205200},
				{-1351.147095, -276.028809, 193.290985},
				{-1144.301147, -276.552368, 191.872696},
				{-1131.968628, -180.031326, 253.871246},
				{-980.031494, -180.074371, 213.871246},
				{-980.308716, -703.941223, 192.871246},
				{-1790.059448, -693.860046, 192.299896},
			},
		},
	}
	/*
		singlePoint := singleVect{
			x: -2145,
			y: -1345,
		}
	*/
	var callouts []string
	calloutsptr := &callouts
	f, err := os.Open("C:\\Users\\Mike\\Desktop\\csStuff\\Heat\\nouns-fe-vs-lumen-fe-m2-dust2.dem")
	if err != nil {
		log.Panic("failed to open demo file: ", err)
	}
	defer f.Close()

	p := dem.NewParser(f)
	defer p.Close()

	killcount := 0
	killcountptr := &killcount
	// Register handler on kill events
	p.RegisterEventHandler(func(e events.Kill) {
		//calloutsLocal := []string{}
		*killcountptr = *killcountptr + 1
		victPoint := singleVect{
			x: e.Victim.Position().X,
			y: e.Victim.Position().Y,
		}

		for _, pos := range positions {
			inter, where := raycast(victPoint.x, victPoint.y, pos.Points, pos.Name)

			if inter == true {
				*calloutsptr = append(*calloutsptr, where)
			}
		}

		//fmt.Println(calloutsLocal)
	})

	// Parse to end
	err = p.ParseToEnd()
	if err != nil {
		log.Panic("failed to parse demo: ", err)
	}

	//off by one kill wtf this sucks gotta rewrite it all smh
	fmt.Println(*killcountptr)
	fmt.Println(len(*calloutsptr))
	//fmt.Println(*calloutsptr)

	countsEntries(calloutsptr, "mid doors")
}

func raycast(victx, victy float64, edges []vector, name string) (bool, string) {
	count := 0
	where := ""
	tolerance := 1e-7

	for i := 0; i < len(edges); i++ {
		curr := edges[i]
		next := edges[(i+1)%len(edges)]

		if curr.y == next.y {
			continue
		}

		if victy < math.Min(curr.y, next.y) || victy > math.Max(curr.y, next.y) {
			continue
		}

		xIntercept := (victy-curr.y)*(next.x-curr.x)/(next.y-curr.y) + curr.x

		//fmt.Printf("Edge from (%f, %f) to (%f, %f), Victim at (%f, %f), xIntercept: %f\n", curr.x, curr.y, next.x, next.y, victx, victy, xIntercept)

		if victx < xIntercept+tolerance {
			if where == "" {
				where = name
				//fmt.Printf("Ray crossed: %s\n", where)
			}
			count++
		}
	}

	//fmt.Printf("Final count: %d, Inside polygon: %v, Callout: %s\n", count, count%2 == 1, where)
	return count%2 == 1, where
}

func countsEntries(calls *[]string, e string) {
	var n int
	for _, i := range *calls {
		temp := strings.ToLower(i)
		if temp == strings.ToLower(e) {
			n++
		}
	}
	fmt.Println(e, n)
}

/*
(
func pointOnEdge(victx, victy, x1, y1, x2, y2, tolerance float64) bool {

		if math.Abs(y2-y1) < tolerance {
			return math.Abs(ypoint-y1) < tolerance && xpoint >= math.Min(x1, x2) && xpoint <= math.Max(x1, x2)
		}

		if x1 == x2 {
			return math.Abs(xpoint-x1) < tolerance && ypoint >= math.Min(y1, y2) && ypoint <= math.Max(y1, y2)
		}

		m := (y2 - y1) / (x2 - x1)
		b := y1 - m*1

		return math.Abs(ypoint-(m*xpoint+b)) < tolerance && xpoint >= math.Min(x1, x2) && xpoint <= math.Max(x1, x2)
	}
*/
func check(e error) {
	if e != nil {
		panic(e)
	}
}
